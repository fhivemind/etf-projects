==31914== Memcheck, a memory error detector
==31914== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==31914== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==31914== Command: /rhome/r/rpolic1/workspace/TP/T2/Z5/.runme
==31914== Parent PID: 31897
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x400C8C: main (main.cpp:18)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x5159024: __sin_sse2 (s_sin.c:296)
==31914==    by 0x400F57: std::complex<double> std::polar<double>(double const&, double const&) (complex:668)
==31914==    by 0x400BF8: main (main.cpp:25)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x5157D3A: __cos_sse2 (s_sin.c:528)
==31914==    by 0x400F83: std::complex<double> std::polar<double>(double const&, double const&) (complex:668)
==31914==    by 0x400BF8: main (main.cpp:25)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x514BF6B: __hypot_finite (e_hypot.c:58)
==31914==    by 0x516148B: hypot (w_hypot.c:24)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x514BFC5: __hypot_finite (e_hypot.c:68)
==31914==    by 0x516148B: hypot (w_hypot.c:24)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x514BFD0: __hypot_finite (e_hypot.c:73)
==31914==    by 0x516148B: hypot (w_hypot.c:24)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x514BFDE: __hypot_finite (e_hypot.c:92)
==31914==    by 0x516148B: hypot (w_hypot.c:24)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x514C0EF: __hypot_finite (e_hypot.c:94)
==31914==    by 0x516148B: hypot (w_hypot.c:24)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x514C106: __hypot_finite (e_hypot.c:98)
==31914==    by 0x516148B: hypot (w_hypot.c:24)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x51614B6: hypot (w_hypot.c:25)
==31914==    by 0x400E2D: std::__complex_abs(doublecomplex ) (complex:587)
==31914==    by 0x400FF6: double std::abs<double>(std::complex<double> const&) (complex:595)
==31914==    by 0x400C1E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x400C2C: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x54456D0: __divdc3 (in /lib/x86_64-linux-gnu/libgcc_s.so.1)
==31914==    by 0x4011B9: std::complex<double>& std::complex<double>::operator/=<double>(std::complex<double> const&) (complex:1330)
==31914==    by 0x40104D: std::complex<double> std::operator/<double>(double const&, std::complex<double> const&) (complex:435)
==31914==    by 0x400C4E: main (main.cpp:26)
==31914== 
==31914== Conditional jump or move depends on uninitialised value(s)
==31914==    at 0x544570A: __divdc3 (in /lib/x86_64-linux-gnu/libgcc_s.so.1)
==31914==    by 0x4011B9: std::complex<double>& std::complex<double>::operator/=<double>(std::complex<double> const&) (complex:1330)
==31914==    by 0x40104D: std::complex<double> std::operator/<double>(double const&, std::complex<double> const&) (complex:435)
==31914==    by 0x400C4E: main (main.cpp:26)
==31914== 
==31914== 
==31914== HEAP SUMMARY:
==31914==     in use at exit: 0 bytes in 0 blocks
==31914==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==31914== 
==31914== All heap blocks were freed -- no leaks are possible
==31914== 
==31914== For counts of detected and suppressed errors, rerun with: -v
==31914== Use --track-origins=yes to see where uninitialised values come from
==31914== ERROR SUMMARY: 1327 errors from 13 contexts (suppressed: 0 from 0)
