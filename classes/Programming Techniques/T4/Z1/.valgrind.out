==381== Memcheck, a memory error detector
==381== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==381== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==381== Command: /rhome/r/rpolic1/workspace/TP/T4/Z1/.runme
==381== Parent PID: 359
==381== 
==381== Conditional jump or move depends on uninitialised value(s)
==381==    at 0x4008C2: Cifre(long long, int&, int&) (main.cpp:6)
==381==    by 0x400A8F: main (main.cpp:36)
==381== 
==381== Conditional jump or move depends on uninitialised value(s)
==381==    at 0x4EC07BE: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4EC0AAC: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4ECC6ED: std::ostream& std::ostream::_M_insert<long long>(long long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x400AB7: main (main.cpp:37)
==381== 
==381== Use of uninitialised value of size 8
==381==    at 0x4EC06A3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4EC07E5: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4EC0AAC: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4ECC6ED: std::ostream& std::ostream::_M_insert<long long>(long long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x400AB7: main (main.cpp:37)
==381== 
==381== Conditional jump or move depends on uninitialised value(s)
==381==    at 0x4EC06AF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4EC07E5: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4EC0AAC: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4ECC6ED: std::ostream& std::ostream::_M_insert<long long>(long long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x400AB7: main (main.cpp:37)
==381== 
==381== Conditional jump or move depends on uninitialised value(s)
==381==    at 0x4EC0813: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4EC0AAC: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x4ECC6ED: std::ostream& std::ostream::_M_insert<long long>(long long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==381==    by 0x400AB7: main (main.cpp:37)
==381== 
==381== 
==381== HEAP SUMMARY:
==381==     in use at exit: 0 bytes in 0 blocks
==381==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==381== 
==381== All heap blocks were freed -- no leaks are possible
==381== 
==381== For counts of detected and suppressed errors, rerun with: -v
==381== Use --track-origins=yes to see where uninitialised values come from
==381== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
