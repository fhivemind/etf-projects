==9182== Memcheck, a memory error detector
==9182== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==9182== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==9182== Command: /rhome/r/rpolic1/workspace/TP/Z2/Z2/.runme
==9182== Parent PID: 9174
==9182== 
==9182== 
==9182== HEAP SUMMARY:
==9182==     in use at exit: 116 bytes in 2 blocks
==9182==   total heap usage: 2 allocs, 0 frees, 116 bytes allocated
==9182== 
==9182== 52 bytes in 1 blocks are possibly lost in loss record 1 of 2
==9182==    at 0x4C2B0E0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9182==    by 0x4EF1248: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==9182==    by 0x4EF2970: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==9182==    by 0x4EF2D87: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==9182==    by 0x401792: main (main.cpp:111)
==9182== 
==9182== 64 bytes in 1 blocks are possibly lost in loss record 2 of 2
==9182==    at 0x4C2B0E0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9182==    by 0x4EF1248: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==9182==    by 0x4EF2970: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==9182==    by 0x4EF2D87: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==9182==    by 0x401768: main (main.cpp:111)
==9182== 
==9182== LEAK SUMMARY:
==9182==    definitely lost: 0 bytes in 0 blocks
==9182==    indirectly lost: 0 bytes in 0 blocks
==9182==      possibly lost: 116 bytes in 2 blocks
==9182==    still reachable: 0 bytes in 0 blocks
==9182==         suppressed: 0 bytes in 0 blocks
==9182== 
==9182== For counts of detected and suppressed errors, rerun with: -v
==9182== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
