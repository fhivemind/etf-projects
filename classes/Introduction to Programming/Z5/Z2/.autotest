{
    "id": 5426,
    "name": "Osnove ra\u010dunarstva (2017\/2018), Zada\u0107a 5, zadatak 2",
    "language": "C",
    "preferred_compiler": "gcc",
    "required_compiler": "gcc",
    "compiler_features": [

    ],
    "compiler_options": "-O1 -Wall -Wuninitialized -Winit-self -Wno-unused-result -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 1,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/* AT1: Test maina (primjer iz zadatka) *\/\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "4\n5\n2\n3,3\n1\n1\n2.9,3.3\n3\n1,0\n4\n4\n4\n-1,-1\n-2,-2\n-3,-1"
            },
            "expected": [
                "Unesite broj oblika: Odaberite tip 1. oblika (1 - tacka, 2 - kruznica, 3 - pravougaonik, 4 - trougao): Nepoznat tip oblika 5!\\nOdaberite tip 1. oblika (1 - tacka, 2 - kruznica, 3 - pravougaonik, 4 - trougao): Unesite centar kruznice: koordinate x,y: Unesite poluprecnik kruznice: Odaberite tip 2. oblika (1 - tacka, 2 - kruznica, 3 - pravougaonik, 4 - trougao): Unesite tacku: koordinate x,y: Odaberite tip 3. oblika (1 - tacka, 2 - kruznica, 3 - pravougaonik, 4 - trougao): Unesite donji lijevi ugao: koordinate x,y: Unesite sirinu: Unesite visinu: Odaberite tip 4. oblika (1 - tacka, 2 - kruznica, 3 - pravougaonik, 4 - trougao): Unesite prvi vrh: koordinate x,y: Unesite drugi vrh: koordinate x,y: Unesite treci vrh: koordinate x,y: \\nOblik 1 obuhvata oblik 2.\\nOblik 3 obuhvata oblik 1.\\nOblik 3 obuhvata oblik 2.\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/* AT2: Da li oblici obuhvataju same sebe? *\/\nstruct Tacka t={1.9,4.3};\nstruct Kruznica k = {{2,4},1};\nstruct Pravougaonik p={{0,1},4,4};\nstruct Trougao tr={{1,3},{3,4},{1,5}};\n\nprintf(\"%d \", obuhvata(&t,TACKA,&t,TACKA));\nprintf(\"%d \", obuhvata(&k,KRUZNICA,&k,KRUZNICA));\nprintf(\"%d \", obuhvata(&p,PRAVOUGAONIK,&p,PRAVOUGAONIK));\nprintf(\"%d \", obuhvata(&tr,TROUGAO,&tr,TROUGAO));\n\n\/* Za slucaj da funkcija uvijek vraca 1 *\/\nprintf(\"%d \", obuhvata(&t,TACKA,&k,KRUZNICA));\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 1 1 1 0 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/* AT3: Neki jednostavni primjeri *\/\nstruct Tacka t={1.9,4.3};\nstruct Kruznica k = {{2,4},1};\nstruct Pravougaonik p={{0,1},4,4};\nstruct Trougao tr={{1,3},{3,4},{1,5}};\n\nprintf(\"%d \", obuhvata(&k,KRUZNICA,&t,TACKA));\nprintf(\"%d \", obuhvata(&p,PRAVOUGAONIK,&t,TACKA));\nprintf(\"%d\\n\", obuhvata(&tr,TROUGAO,&t,TACKA));\n\nprintf(\"%d \", obuhvata(&t,TACKA,&k,KRUZNICA));\nprintf(\"%d \", obuhvata(&p,PRAVOUGAONIK,&k,KRUZNICA));\nprintf(\"%d\\n\", obuhvata(&tr,TROUGAO,&k,KRUZNICA));\n\nprintf(\"%d \", obuhvata(&t,TACKA,&p,PRAVOUGAONIK));\nprintf(\"%d \", obuhvata(&k,KRUZNICA,&p,PRAVOUGAONIK));\nprintf(\"%d\\n\", obuhvata(&tr,TROUGAO,&p,PRAVOUGAONIK));\n\nprintf(\"%d \", obuhvata(&t,TACKA,&tr,TROUGAO));\nprintf(\"%d \", obuhvata(&k,KRUZNICA,&tr,TROUGAO));\nprintf(\"%d \", obuhvata(&p,PRAVOUGAONIK,&tr,TROUGAO));",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 1 1\\n0 1 0\\n0 0 0\\n0 0 1"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 4,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/* AT4: Tacka moze obuhvatati oblike velicine 0 (i obrnuto) *\/\nstruct Tacka t={-3,-3};\nstruct Kruznica k = {{-3,-3},0};\nstruct Pravougaonik p={{-3,-3},0,0};\nstruct Trougao tr={{-3,-3},{-3,-3},{-3,-3}};\n\nprintf(\"%d \", obuhvata(&k,KRUZNICA,&t,TACKA));\nprintf(\"%d \", obuhvata(&p,PRAVOUGAONIK,&t,TACKA));\nprintf(\"%d\\n\", obuhvata(&tr,TROUGAO,&t,TACKA));\n\nprintf(\"%d \", obuhvata(&t,TACKA,&k,KRUZNICA));\nprintf(\"%d \", obuhvata(&t,TACKA,&p,PRAVOUGAONIK));\nprintf(\"%d\\n\", obuhvata(&t,TACKA,&tr,TROUGAO));\n\np.sirina=1;\nprintf(\"%d \", obuhvata(&p,PRAVOUGAONIK,&t,TACKA));\nprintf(\"%d \", obuhvata(&t,TACKA,&p,PRAVOUGAONIK));\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 1 1\\n1 1 1\\n1 0"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 5,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/* AT5: Da li trougao ispravno obuhvata tacke na svom rubu? *\/\n\nstruct Tacka tacke[11] = {{1,3}, {2,4}, {1,5}, {1.5,3.5}, {1.5,4.5}, {1,4}, {1,2}, {1,6}, {0,2}, {3,3}, {0,6}};\nstruct Trougao tr={{1,3},{2,4},{1,5}};\nint i;\nfor (i=0; i<11; i++)\n   printf(\"%d \", obuhvata(&tr,TROUGAO,&tacke[i],TACKA));\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 1 1 1 1 1 0 0 0 0 0"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 6,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/* AT6: Da li trougao ispravno obuhvata kruznicu? *\/\nstruct Kruznica k = {{2,4},1};\nstruct Trougao tr={{1,3},{2,5},{3,3}};\nprintf(\"%d \", obuhvata(&tr,TROUGAO,&k,KRUZNICA));\nk.radijus = 0.5;\nprintf(\"%d \", obuhvata(&tr,TROUGAO,&k,KRUZNICA));\nk.radijus = 0.45;\nprintf(\"%d \", obuhvata(&tr,TROUGAO,&k,KRUZNICA));\nk.radijus = 0.44;\nprintf(\"%d \", obuhvata(&tr,TROUGAO,&k,KRUZNICA));",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "0 0 0 1 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}