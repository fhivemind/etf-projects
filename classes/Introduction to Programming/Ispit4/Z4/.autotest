{
    "id": 5445,
    "name": "Osnove ra\u010dunarstva (2017\/2018), Ispit 4, zadatak 4",
    "language": "C",
    "preferred_compiler": "gcc",
    "required_compiler": "gcc",
    "compiler_features": [

    ],
    "compiler_options": "-O1 -Wall -Wuninitialized -Winit-self -Wno-unused-result -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 1,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "struct Tacka niz[100] = {\n\t{{1, 1, 1, 1}},\n\t{{2, 2, 2, 2}},\n\t{{1.3, 1.3, 1.3, 1.3}}\n};\nint dimenzija = 4;\nint vel = izbaci_najblize(niz, 3, dimenzija);\nint i,j;\nfor (i=0; i<vel; i++) {\n\tprintf(\"(\");\n\tfor (j=0; j<dimenzija-1; j++)\n\t\tprintf(\"%g,\", niz[i].koordinata[j]);\n\tprintf(\"%g)\\n\", niz[i].koordinata[dimenzija-1]);\n}\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "(2,2,2,2)"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "struct Tacka niz[100] = {\n\t{{2, 2, 2, 2}},\n\t{{1, 1, 1, 1}},\n\t{{3, 3, 3, 3}},\n\t{{1.8, 1.8, 1.8, 1.8}},\n\t{{1.3, 1.3, 1.3, 1.3}}\n};\nint dimenzija = 4;\nint vel = izbaci_najblize(niz, 5, dimenzija);\nint i,j;\nfor (i=0; i<vel; i++) {\n\tprintf(\"(\");\n\tfor (j=0; j<dimenzija-1; j++)\n\t\tprintf(\"%g,\", niz[i].koordinata[j]);\n\tprintf(\"%g)\\n\", niz[i].koordinata[dimenzija-1]);\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "(1,1,1,1)\\n(3,3,3,3)\\n(1.3,1.3,1.3,1.3)"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "struct Tacka niz[100] = {\n\t{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}},\n\t{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.1}},\n\t{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.08}},\n\t{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.2}},\n\t{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.145}},\n\t{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.31}},\n};\nint dimenzija = 50;\nint vel = izbaci_najblize(niz, 6, dimenzija);\nint i,j;\nfor (i=0; i<vel; i++) {\n\tprintf(\"(\");\n\tfor (j=0; j<dimenzija-1; j++)\n\t\tprintf(\"%g,\", niz[i].koordinata[j]);\n\tprintf(\"%g)\\n\", niz[i].koordinata[dimenzija-1]);\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)\\n(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.2)\\n(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.145)\\n(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.31)\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 4,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "struct Tacka niz[100] = {\n    {{1}}, {{4}}, {{5}}\n};\nint dimenzija = 1;\nint vel = izbaci_najblize(niz, 0, dimenzija);\nprintf(\"Vel: %d\\n\", vel);\nvel = izbaci_najblize(niz, 1, dimenzija);\nprintf(\"Vel: %d\\n\", vel);\nvel = izbaci_najblize(niz, 2, dimenzija);\nprintf(\"Vel: %d\\n\", vel);\n\nstruct Tacka niz2[100] = {\n    {{1}}, {{4}}, {{5}}\n};\nvel = izbaci_najblize(niz2, 3, dimenzija);\n\nint i,j;\nfor (i=0; i<vel; i++) {\n    printf(\"(\");\n    for (j=0; j<dimenzija-1; j++)\n        printf(\"%g,\", niz2[i].koordinata[j]);\n    printf(\"%g)\\n\", niz2[i].koordinata[dimenzija-1]);\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Vel: 0\\nVel: 1\\nVel: 0\\n(1)"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 5,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "struct Tacka niz[100] = {\n    {{0.01, 1, -1, -1}},\n    {{-1, 1, 0.03, -1}},\n    {{-1, 0, -1, 1}}\n};\nint dimenzija = 4;\nint vel = izbaci_najblize(niz, 3, dimenzija);\n\nint i,j;\nfor (i=0; i<vel; i++) {\n    printf(\"(\");\n    for (j=0; j<dimenzija-1; j++)\n        printf(\"%g,\", niz[i].koordinata[j]);\n    printf(\"%g)\\n\", niz[i].koordinata[dimenzija-1]);\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "(-1,0,-1,1)"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 6,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "struct Tacka niz[100] = {\n    {{-2, -8, -3.5, -7.11}},\n    {{1, -4.4, -9.01, -0.002}},\n    {{-2, -2, -3.5, -7}},\n    {{-10, -9.73, -9.01, -8.77}},\n    {{-1, 0, -1, -10}}\n};\nint dimenzija = 4;\nint vel = izbaci_najblize(niz, 5, dimenzija);\n\nint i,j;\nfor (i=0; i<vel; i++) {\n    printf(\"(\");\n    for (j=0; j<dimenzija-1; j++)\n        printf(\"%g,\", niz[i].koordinata[j]);\n    printf(\"%g)\\n\", niz[i].koordinata[dimenzija-1]);\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "(-2,-8,-3.5,-7.11)\\n(1,-4.4,-9.01,-0.002)\\n(-10,-9.73,-9.01,-8.77)"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}